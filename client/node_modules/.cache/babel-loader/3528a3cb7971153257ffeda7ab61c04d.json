{"ast":null,"code":"import _toConsumableArray from \"/Users/vhoang10/LEARNING JAVASCRIPT/form-example/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/vhoang10/LEARNING JAVASCRIPT/form-example/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vhoang10/LEARNING JAVASCRIPT/form-example/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vhoang10/LEARNING JAVASCRIPT/form-example/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vhoang10/LEARNING JAVASCRIPT/form-example/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vhoang10/LEARNING JAVASCRIPT/form-example/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vhoang10/LEARNING JAVASCRIPT/form-example/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport AppNavbar from './components/AppNavbar';\nimport Emails from './components/Emails';\nimport AddTodo from './components/AddEmail'; //import About from './components/pages/About';\n//import  uuid from 'uuid';\n\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      emails: []\n    };\n\n    _this.addTodo = function (title) {\n      axios.post('api/forms', {\n        title: title\n      }).then(function (res) {\n        return _this.setState({\n          emails: [].concat(_toConsumableArray(_this.state.emails), [res.data])\n        });\n      }); // const newTodo = {\n      //   id: uuid.v4(),\n      //   title, \n      //   completed: false\n      // }\n      //this.setState({todos: [...this.state.todos, newTodo]});\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('api/forms').then(function (res) {\n        return _this2.setState({\n          emails: res.data\n        });\n      });\n    } // Toggle the \"completed\" part in state when onChange is clicked \n    // markComplete = (id) => {\n    //   this.setState({todos: this.state.todos.map(todo =>{\n    //     if (todo.id === id) {\n    //       todo.completed = !todo.completed;\n    //     }\n    //     return todo;\n    //   }) \n    //     })\n    // }\n    // Delete Todo\n    // delTodo = (id) => { \n    //   axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    //     .then(res => this.setState({todos: [...this.state.todos.filter(todo => todo.id !== id)]}));\n    // }\n    //Add Todo: \n    //Making the request to JSONPLACEHOLDER and it sends a response back with to do information including the ID\n    // and it got added to the UI\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(AppNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(AddEmail, {\n            addEmail: _this3.addEmail,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }), React.createElement(Emails, {\n            emails: _this3.state.emails,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // import React, { Component } from 'react';\n// import {BrowserRouter as Router, Route} from 'react-router-dom';\n// import axios from 'axios';\n// import AppNavbar from './components/AppNavbar';\n// import Emails from './components/Emails';\n// import AddEmail from './components/AddEmail';\n// import './App.css';\n// class App extends Component {\n//   state = { \n//     emails: []\n//   }\n//   componentDidMount() {\n//     axios.get('api/forms')\n//       .then(res => this.setState({emails: res.data}));\n//   }\n//   // Toggle the \"completed\" part in state when onChange is clicked \n//   // markComplete = (id) => {\n//   //   this.setState({todos: this.state.todos.map(todo =>{\n//   //     if (todo.id === id) {\n//   //       todo.completed = !todo.completed;\n//   //     }\n//   //     return todo;\n//   //   }) \n//   //     })\n//   // }\n//   // Delete Todo\n//   delEmail = (id) => { \n//     axios.delete(`api/forms/${id}`)\n//       .then(res => this.setState({emails: [...this.state.emails.filter(email => email.id !== id)]}));\n//   }\n//   //Add Todo: \n//   addTodo = (email) => {\n//     axios.post('api/forms/', {\n//       email\n//     })\n//       .then(res => this.setState(state => ({emails: [...state.emails, { email: email}]})))\n//   }\n//   render() {\n//     return (\n//       <Router>\n//         <div className=\"App\">\n//           <div className= \"container\">\n//             <AppNavbar />\n//             <Route exact path = \"/\" render = {props => (\n//               <React.Fragment>\n//                 <AddEmail addEmail = {this.addEmail} />\n//                 <Emails emails = {this.state.emails} \n//                 delEmail = {this.delEmail}/>\n//                 </React.Fragment>\n//             )} />\n//           </div>\n//         </div>\n//       </Router>\n//     );\n//   }\n// }\n// export default App;\n// import React, { Component } from 'react';\n// import AppNavbar from './components/AppNavbar';\n// import EmailList from './components/EmailList';\n// import AddEmail from './components/AddEmail'\n// import './App.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// //import { Provider } from 'react-redux';\n// //mport store from './store';\n// class App extends Component {\n//   //   state = { \n//   //   emails: []\n//   // }\n//   render() {\n//     return (\n//         <div className='App'>\n//           <AppNavbar />\n//           {/* <Container> */}\n//             {/* <EmailModal /> */}\n//           <EmailList />\n//           <AddEmail addTodo={this.addTodo} />\n//           {/* </Container> */}\n//         </div>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["/Users/vhoang10/LEARNING JAVASCRIPT/form-example/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","axios","AppNavbar","Emails","AddTodo","App","state","emails","addTodo","title","post","then","res","setState","data","get","props","addEmail"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CACA;AAEA;;AAEA,OAAO,WAAP;;IAIMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AADF,K;;UA2BRC,O,GAAU,UAACC,KAAD,EAAW;AACnBR,MAAAA,KAAK,CAACS,IAAN,CAAW,WAAX,EAAwB;AACtBD,QAAAA,KAAK,EAALA;AADsB,OAAxB,EAGGE,IAHH,CAGQ,UAAAC,GAAG;AAAA,eAAI,MAAKC,QAAL,CAAc;AAACN,UAAAA,MAAM,+BAAM,MAAKD,KAAL,CAAWC,MAAjB,IAAyBK,GAAG,CAACE,IAA7B;AAAP,SAAd,CAAJ;AAAA,OAHX,EADmB,CAMnB;AACA;AACA;AACA;AACA;AACA;AACD,K;;;;;;;wCAnCmB;AAAA;;AAClBb,MAAAA,KAAK,CAACc,GAAN,CAAU,WAAV,EACGJ,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAACN,UAAAA,MAAM,EAAEK,GAAG,CAACE;AAAb,SAAd,CAAJ;AAAA,OADX;AAED,K,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAeS;AAAA;;AACP,aACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAApB;AAAwB,QAAA,MAAM,EAAI,gBAAAE,KAAK;AAAA,iBACrC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,QAAD;AAAU,YAAA,QAAQ,EAAI,MAAI,CAACC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,MAAD;AAAQ,YAAA,MAAM,EAAI,MAAI,CAACX,KAAL,CAAWC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADqC;AAAA,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,CADF;AAgBD;;;;EA3DeV,S;;AA8DlB,eAAeQ,GAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport axios from 'axios';\nimport AppNavbar from './components/AppNavbar';\nimport Emails from './components/Emails';\nimport AddTodo from './components/AddEmail';\n//import About from './components/pages/About';\n\n//import  uuid from 'uuid';\n\nimport './App.css';\n\n\n\nclass App extends Component {\n  state = { \n    emails: []\n  }\n\n  componentDidMount() {\n    axios.get('api/forms')\n      .then(res => this.setState({emails: res.data}));\n  }\n\n  // Toggle the \"completed\" part in state when onChange is clicked \n  // markComplete = (id) => {\n  //   this.setState({todos: this.state.todos.map(todo =>{\n  //     if (todo.id === id) {\n  //       todo.completed = !todo.completed;\n  //     }\n  //     return todo;\n  //   }) \n  //     })\n  // }\n  // Delete Todo\n  // delTodo = (id) => { \n  //   axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n  //     .then(res => this.setState({todos: [...this.state.todos.filter(todo => todo.id !== id)]}));\n  // }\n  //Add Todo: \n  //Making the request to JSONPLACEHOLDER and it sends a response back with to do information including the ID\n  // and it got added to the UI\n  addTodo = (title) => {\n    axios.post('api/forms', {\n      title\n    })\n      .then(res => this.setState({emails: [...this.state.emails, res.data]}))\n\n    // const newTodo = {\n    //   id: uuid.v4(),\n    //   title, \n    //   completed: false\n    // }\n    //this.setState({todos: [...this.state.todos, newTodo]});\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className= \"container\">\n            <AppNavbar />\n            <Route exact path = \"/\" render = {props => (\n              <React.Fragment>\n                <AddEmail addEmail = {this.addEmail} />\n                <Emails emails = {this.state.emails} />\n                </React.Fragment>\n            )} />\n            {/* <Route path = \"/about\" component = {About} /> */}\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// import React, { Component } from 'react';\n// import {BrowserRouter as Router, Route} from 'react-router-dom';\n// import axios from 'axios';\n// import AppNavbar from './components/AppNavbar';\n// import Emails from './components/Emails';\n// import AddEmail from './components/AddEmail';\n\n\n// import './App.css';\n\n\n// class App extends Component {\n//   state = { \n//     emails: []\n//   }\n\n//   componentDidMount() {\n//     axios.get('api/forms')\n//       .then(res => this.setState({emails: res.data}));\n//   }\n\n//   // Toggle the \"completed\" part in state when onChange is clicked \n//   // markComplete = (id) => {\n//   //   this.setState({todos: this.state.todos.map(todo =>{\n//   //     if (todo.id === id) {\n//   //       todo.completed = !todo.completed;\n//   //     }\n//   //     return todo;\n//   //   }) \n//   //     })\n//   // }\n//   // Delete Todo\n//   delEmail = (id) => { \n//     axios.delete(`api/forms/${id}`)\n//       .then(res => this.setState({emails: [...this.state.emails.filter(email => email.id !== id)]}));\n//   }\n//   //Add Todo: \n//   addTodo = (email) => {\n//     axios.post('api/forms/', {\n//       email\n//     })\n//       .then(res => this.setState(state => ({emails: [...state.emails, { email: email}]})))\n//   }\n\n//   render() {\n//     return (\n//       <Router>\n//         <div className=\"App\">\n//           <div className= \"container\">\n//             <AppNavbar />\n//             <Route exact path = \"/\" render = {props => (\n//               <React.Fragment>\n//                 <AddEmail addEmail = {this.addEmail} />\n//                 <Emails emails = {this.state.emails} \n//                 delEmail = {this.delEmail}/>\n//                 </React.Fragment>\n//             )} />\n//           </div>\n//         </div>\n//       </Router>\n//     );\n//   }\n// }\n\n// export default App;\n\n\n\n\n\n// import React, { Component } from 'react';\n// import AppNavbar from './components/AppNavbar';\n// import EmailList from './components/EmailList';\n// import AddEmail from './components/AddEmail'\n// import './App.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// //import { Provider } from 'react-redux';\n// //mport store from './store';\n\n// class App extends Component {\n//   //   state = { \n//   //   emails: []\n//   // }\n//   render() {\n//     return (\n//         <div className='App'>\n//           <AppNavbar />\n//           {/* <Container> */}\n//             {/* <EmailModal /> */}\n//           <EmailList />\n//           <AddEmail addTodo={this.addTodo} />\n//           {/* </Container> */}\n//         </div>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}